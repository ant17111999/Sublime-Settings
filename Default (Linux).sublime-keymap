[
  // Fix End of line
{ "keys": ["end"], "command": "move_to", "args": {"to": "hardeol", "extend": false} }
// Fix Beginning of line
,{ "keys": ["home"], "command": "move_to", "args": {"to": "hardbol", "extend": false} }
// Fix end of line + select
,{ "keys": ["ctrl+shift+end"], "command": "move_to", "args": {"to": "hardeol", "extend": true} }
// Fix beginning of line + select
,{ "keys": ["ctrl+shift+home"], "command": "move_to", "args": {"to": "hardbol", "extend": true} }
// Open in browser Sidebar
,
{ "keys": ["f12"],
  "command": "side_bar_open_in_browser" ,
  "args":{"paths":[], "type":"testing", "browser":""}
},
{ "keys": ["alt+f12"],
  "command": "side_bar_open_in_browser",
  "args":{"paths":[], "type":"production", "browser":""}
},
{ "keys": ["ctrl+k", "ctrl+n"], "command": "terminal_view_open" }
,
{
    "keys": ["ctrl+shift+w"],
    "command": "toggle_setting",
    "args": {
        "setting": "word_wrap"
    }
}
,
{
  "keys": ["tab"], 
  "command": "expand_abbreviation_by_tab", 

  // put comma-separated syntax selectors for which 
  // you want to expandEmmet abbreviations into "operand" key 
  // instead of SCOPE_SELECTOR.
  // Examples: source.js, text.html - source
  "context": [
    {
      "operand": "source.js meta.group.braces.curly.js meta.group.braces.round.js, text.html", 
      "operator": "equal", 
      "match_all": true, 
      "key": "selector"
    }, 

    // run only if there's no selected text
    {
      "match_all": true, 
      "key": "selection_empty"
    }
    ,
    // don't work if between quotes

    {
      "operand": "source.js string.quoted.js, source.js string.quoted.jsx", 
      "operator": "not_equal", 
      "match_all": true, 
      "key": "selector"
    },

    // don't work if there are active tabstops
    {
      "operator": "equal", 
      "operand": false, 
      "match_all": true, 
      "key": "has_next_field"
    } 

    // don't work if completion popup is visible and you
    // want to insert completion with Tab. If you want to
    // expand Emmet with Tab even if popup is visible -- 
    // remove this section
    // {
    //   "operand": false, 
    //   "operator": "equal", 
    //   "match_all": true, 
    //   "key": "auto_complete_visible"
    // }, 
    // {
    //   "match_all": true, 
    //   "key": "is_abbreviation"
    // }
  ]
}
]

